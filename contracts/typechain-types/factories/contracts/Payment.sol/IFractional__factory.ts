/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IFractional,
  IFractionalInterface,
} from "../../../contracts/Payment.sol/IFractional";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "homeId",
        type: "uint256",
      },
    ],
    name: "viewHome",
    outputs: [
      {
        internalType: "uint256",
        name: "totalQty",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unitCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFractional__factory {
  static readonly abi = _abi;
  static createInterface(): IFractionalInterface {
    return new Interface(_abi) as IFractionalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IFractional {
    return new Contract(address, _abi, runner) as unknown as IFractional;
  }
}
